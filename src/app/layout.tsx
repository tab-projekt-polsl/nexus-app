import type { Metadata } from "next";
import { Inter } from "next/font/google";
import "./globals.css";
import Activity from "@/database/models/activity";
import Address from "@/database/models/address";
import Client from "@/database/models/client";
import Employee from "@/database/models/employee";
import DbObject from "@/database/models/object";
import Request from "@/database/models/request";
import { ActivityController } from "@/database/controllers/activity/activity.controller";
import {
  ACTIVITY_STATUS_ENUM,
  ACTIVITY_TYPE_ENUM,
} from "@/database/controllers/activity/activity.dto";
import { RequestController } from "@/database/controllers/request/request.controller";
import { REQUEST_STATUS_ENUM } from "@/database/controllers/request/request.dto";
import { log } from "console";

const inter = Inter({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

function addSamepleRequests(): void {
  RequestController.createRequest({
    description: "First request",
    result: true,
    status: REQUEST_STATUS_ENUM.DONE,
    dateReg: new Date(),
    dateFinCancel: new Date(),
  });
  RequestController.createRequest({
    description: "Second request",
    result: false,
    status: REQUEST_STATUS_ENUM.TODO,
    dateReg: new Date(),
    dateFinCancel: new Date(),
  });
}

function addSampleActivities(): void {
  ActivityController.createActivity({
    sequenceNum: 1,
    description: "First activity",
    result: true,
    status: ACTIVITY_STATUS_ENUM.DONE,
    dateReg: new Date(),
    dateFinCancel: new Date(),
    actType: ACTIVITY_TYPE_ENUM.ACTIVITY_TYPE,
    requestId: 1,
    employeeId: 1,
  });
  ActivityController.createActivity({
    sequenceNum: 2,
    description: "Second activity",
    result: false,
    status: ACTIVITY_STATUS_ENUM.TODO,
    dateReg: new Date(),
    dateFinCancel: new Date(),
    actType: ACTIVITY_TYPE_ENUM.ACTIVITY_TYPE,
    requestId: 2,
    employeeId: 2,
  });
  ActivityController.createActivity({
    sequenceNum: 3,
    description: "Third activity",
    result: false,
    status: ACTIVITY_STATUS_ENUM.IN_PROGRESS,
    dateReg: new Date(),
    dateFinCancel: new Date(),
    actType: ACTIVITY_TYPE_ENUM.ACTIVITY_TYPE,
    requestId: 3,
    employeeId: 3,
  });
}

function syncAllModels(): void {
  Activity.sync();
  Address.sync();
  Client.sync();
  Employee.sync();
  DbObject.sync();
  Request.sync();

  // ActivityController.obliterate();
  // addSampleData();
  // addSamepleRequests();
  RequestController.getRequests().then((requests) => {
    log(requests);
  });
  /* ActivityController.getActivities().then((activities) => {
    console.log(activities);
  }); */
}

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  syncAllModels();
  return (
    <html lang="en">
      <body className={inter.className}>{children}</body>
    </html>
  );
}
